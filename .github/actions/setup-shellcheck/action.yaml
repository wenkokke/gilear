name: "Setup ShellCheck"
description: "Install a specific ShellCheck version"
inputs:
  shellcheck-version:
    required: true
    description: "Version of ShellCheck"
outputs:
  shellcheck-bin:
    description: "Path to the ShellCheck binary"
    value: ${{ steps.setup-shellcheck.outputs.shellcheck-bin }}
  shellcheck-dir:
    description: "Path to the ShellCheck directory"
    value: ${{ steps.setup-shellcheck.outputs.shellcheck-dir }}
runs:
  using: composite
  steps:
    - name: 💾 Restore cache
      uses: actions/cache/restore@v4
      if: ${{ !env.ACT }}
      with:
        path: "$HOME/.shellcheck/bin"
        key: ${{ runner.os }}-shellcheck-${{ inputs.shellcheck-version }}
      id: cache-shellcheck

    - name: 🛠️ Install ShellCheck (Linux)
      if: ${{ runner.os == 'Linux' }}
      env:
        SHELLCHECK_URL: "https://github.com/koalaman/shellcheck/releases/download/v${{ inputs.shellcheck-version }}/shellcheck-v${{ inputs.shellcheck-version }}.linux.x86_64.tar.xz"
      run: |
        mkdir --parents "$HOME/.shellcheck/bin"
        curl --silent --location "$SHELLCHECK_URL" | tar --extract --xz --directory="$HOME/.shellcheck/bin" --strip-components=1 shellcheck-v${{ inputs.shellcheck-version }}/shellcheck
        echo "shellcheck-bin=$HOME/.shellcheck/bin/shellcheck" >> "$GITHUB_OUTPUT"
        echo "shellcheck-dir=$HOME/.shellcheck/bin" >> "$GITHUB_OUTPUT"
      shell: sh
      id: setup-shellcheck

    - name: 🛠️ Install ShellCheck (macOS)
      if: ${{ runner.os == 'macOS' }}
      env:
        SHELLCHECK_URL: "https://github.com/koalaman/shellcheck/releases/download/v${{ inputs.shellcheck-version }}/shellcheck-v${{ inputs.shellcheck-version }}.darwin.aarch64.tar.xz"
      run: |
        mkdir --parents "$HOME/.shellcheck/bin"
        curl --silent --location "$SHELLCHECK_URL" | tar --extract --xz --directory="$HOME/.shellcheck/bin" --strip-components=1 shellcheck-v${{ inputs.shellcheck-version }}/shellcheck
        echo "shellcheck-bin=$HOME/.shellcheck/bin/shellcheck" >> "$GITHUB_OUTPUT"
        echo "shellcheck-dir=$HOME/.shellcheck/bin" >> "$GITHUB_OUTPUT"
      shell: sh
      id: setup-shellcheck

    - name: 🛠️ Install ShellCheck (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        echo "Windows is unsupported"
        exit 1
      shell: sh

    - name: 💾 Save Cabal dependencies
      if: ${{ !env.ACT && steps.cache-shellcheck.outputs.cache-hit != 'true' }}
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.setup-shellcheck.outputs.shellcheck-dir }}
        key: ${{ steps.cache-shellcheck.outputs.cache-primary-key }}
