{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "gilear",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "declaration"
      }
    },
    "declaration": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "declaration_type_signature"
        },
        {
          "type": "SYMBOL",
          "name": "declaration_function"
        }
      ]
    },
    "declaration_type_signature": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "variable_name"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "FIELD",
          "name": "right",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "declaration_function": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "variable_name"
          }
        },
        {
          "type": "FIELD",
          "name": "left",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "pattern_list"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "right",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "pattern_list": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "pattern"
      }
    },
    "pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "pattern_variable"
        },
        {
          "type": "SYMBOL",
          "name": "pattern_constructor"
        },
        {
          "type": "SYMBOL",
          "name": "pattern_parentheses"
        }
      ]
    },
    "pattern_variable": {
      "type": "SYMBOL",
      "name": "variable_name"
    },
    "pattern_constructor": {
      "type": "SYMBOL",
      "name": "constructor_name"
    },
    "pattern_parentheses": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "pattern"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression_variable"
        },
        {
          "type": "SYMBOL",
          "name": "expression_constructor"
        },
        {
          "type": "SYMBOL",
          "name": "expression_function_type"
        },
        {
          "type": "SYMBOL",
          "name": "expression_function_application"
        },
        {
          "type": "SYMBOL",
          "name": "expression_function_abstraction"
        },
        {
          "type": "SYMBOL",
          "name": "expression_annotation"
        },
        {
          "type": "SYMBOL",
          "name": "expression_parentheses"
        }
      ]
    },
    "expression_variable": {
      "type": "SYMBOL",
      "name": "variable_name"
    },
    "expression_constructor": {
      "type": "SYMBOL",
      "name": "constructor_name"
    },
    "expression_function_type": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "STRING",
            "value": "->"
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "expression_function_application": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "function",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          },
          {
            "type": "FIELD",
            "name": "argument",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          }
        ]
      }
    },
    "expression_function_abstraction": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "REPEAT1",
            "content": {
              "type": "SYMBOL",
              "name": "pattern"
            }
          },
          {
            "type": "STRING",
            "value": "->"
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "expression_annotation": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "STRING",
            "value": ":"
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "expression_parentheses": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "variable_name": {
      "type": "PATTERN",
      "value": "[a-z][A-Za-z0-9]*"
    },
    "constructor_name": {
      "type": "PATTERN",
      "value": "[A-Z][A-Za-z0-9]*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [
    "declaration",
    "pattern",
    "expression"
  ]
}
